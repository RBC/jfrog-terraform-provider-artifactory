pipelines:
  - name: tf_provider_artifactory_smoke
    configuration:
      environmentVariables:
        readOnly:
          JFROG_URL: ""
          JFROG_ACCESS_TOKEN: ""
    steps:
      - name: build_and_run_tf_provider
        type: Bash
        configuration:
          #nodePool: default
          priority: 1
          timeoutSeconds: 300 # 5 minutes
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.19"
          requiresApproval:
            approvers:
              - alexh
              - danielmi
            notifications:
              - integrationName: partnership_slack
            timeoutSeconds: 172800 # 2 days
          integrations:
            - name: partnership_slack
          inputResources:
            - name: GitHubTFProviderRepoJFrog
              trigger: false
        execution:
          onStart:
            - >-
              if [[ -z ${JFROG_URL} || -z ${JFROG_ACCESS_TOKEN} ]]; then
                echo "JFROG_URL, JFROG_ACCESS_TOKEN must be supplied to this pipeline"
                exit 1
              fi
            - echo "Preparing for work. Install Terraform"
            - ls -al && pwd
            - sudo apt update
            - go version
            - echo "Install latest Terraform version"
            - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
            - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
            - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            - sudo apt update && apt-get install terraform && terraform -version
          onExecute:
            - cd ${res_GitHubTFProviderRepoSmoke_resourcePath} # we need to manually move into the resource path
            - echo "Verify the code contents merged feature branch with master branch (detached mode)"
            - git branch && ls -al
            - add_run_variables PROVIDER_VERSION=$(git describe --tags --abbrev=0 | sed  -n 's/v\([0-9]*\).\([0-9]*\).\([0-9]*\)/\1.\2.\3/p')
            - echo "Provider version is ${PROVIDER_VERSION}"
            - echo "Rename the build to make it work on Ubuntu"
            - cat GNUmakefile | sed -e "s/darwin_amd64/linux_amd64/g" > GNUmakefile.tmp
            - cp GNUmakefile.tmp GNUmakefile && rm GNUmakefile.tmp
            - cat GNUmakefile
            - cat sample.tf | sed -e "s/version =.*/version = \"${PROVIDER_VERSION}\"/g" > sample.tf.tmp
            - cp sample.tf.tmp sample.tf && rm sample.tf.tmp
            - cat sample.tf
            - echo "Add variables needed to run Terraform Provider"
            - export TF_ACC=true
            - make smoke
          onSuccess:
            - echo "Success"
            - send_notification partnership_slack --text "${pipeline_name} step <${step_url}|${step_name}> is completed. Version ${PROVIDER_VERSION:-" wasn't set"}."
          onFailure:
            - send_notification partnership_slack --text "${pipeline_name} pipeline failed on <${step_url}|${step_name}> step"
          onComplete:
            - echo "Complete"
